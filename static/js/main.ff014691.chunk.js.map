{"version":3,"sources":["components/UI/MyButton.jsx","components/Header.jsx","components/UI/ArrowButton.jsx","components/UI/SelectColumnForm.jsx","components/Card.jsx","data.js","utils.js","components/UI/Spinner.jsx","components/NewCard.jsx","hooks/useDebounce.js","types.js","action-creators/index.jsx","components/Column.jsx","components/Main.jsx","components/UI/Module.jsx","components/SaveChangesModule.jsx","App.js","hooks/useSaveState.js","index.js","reducer/index.js"],"names":["MyButton","onClick","text","other","className","type","Header","saveChanges","ArrowButton","onClickOpenSelect","width","height","viewBox","fill","xmlns","fillRule","clipRule","d","SelectColumnForm","column","onChooseColumn","onSetColumn","closeSelect","name","value","onChange","disabled","Card","card","moveCard","url","description","id","useState","select","setSelect","newColumn","setNewColumn","evt","target","src","alt","defaultState","columnName","cards","defaultCard","stateName","getUniqId","ids","min","max","Math","floor","random","includes","Spinner","color","NewCard","columnId","addCard","setShowCardForm","tracker","newCard","setNewCard","getPhoto","reduce","arr","col","map","flat","axios","get","then","res","data","err","Error","onReset","classList","contains","reset","useEffect","input","getPhotoDebounsed","func","delay","cleanUp","timeoutRef","useRef","clearTimer","current","clearTimeout","args","setTimeout","useDebounce","ref","addEventListener","onInputChange","trim","length","setCustomValidity","reportValidity","removeEventListener","onSubmit","preventDefault","autoComplete","minLength","placeholder","required","types","dispatch","payload","Column","useDispatch","bindActionCreators","actionCreators","showCardForm","Main","Module","btn","SaveChangesModule","setIsSaveChanges","App","useSelector","state","isSaveChanges","localStorage","setItem","JSON","stringify","useSaveState","initialState","getItem","parse","getStateFromLocalStorage","store","createStore","action","forEach","find","filter","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"iWAQeA,EANE,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,QAASC,EAAqB,EAArBA,KAASC,EAAY,iBAChD,OACE,gDAAQC,UAAU,SAASC,KAAK,SAASJ,QAASA,GAAaE,GAA/D,aAAwED,MCS7DI,EAVA,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,YAEf,OACE,yBAAQH,UAAU,SAAlB,UACE,8CACA,cAAC,EAAD,CAAUH,QAASM,EAAaL,KAAK,sH,OCI5BM,EAVK,SAAC,GAAyB,IAAxBC,EAAuB,EAAvBA,kBACpB,OACE,sBAAMR,QAASQ,EAAf,SACE,qBAAKC,MAAM,KAAKC,OAAO,KAAKC,QAAQ,YAAYC,KAAK,OAAOC,MAAM,6BAAlE,SACE,sBAAMC,SAAS,UAAUC,SAAS,UAAUC,EAAE,kbAAkbJ,KAAK,eCa9dK,EAhBU,SAAC,GAA0D,IAAxDC,EAAuD,EAAvDA,OAAQC,EAA+C,EAA/CA,eAAgBC,EAA+B,EAA/BA,YAAaC,EAAkB,EAAlBA,YAE/D,OACE,uBAAMlB,UAAU,aAAhB,UACE,yBAAQmB,KAAK,OAAOC,MAAOL,EAAQM,SAAUJ,EAA7C,UACE,wBAAQG,MAAM,GAAGE,UAAQ,EAAzB,0GACA,wBAAQF,MAAM,OAAd,wDACA,wBAAQA,MAAM,aAAd,qEACA,wBAAQA,MAAM,OAAd,2DAEF,cAAC,EAAD,CAAUvB,QAASmB,EAAgBlB,KAAK,OACxC,cAAC,EAAD,CAAUD,QAASqB,EAAapB,KAAK,6CCuC5ByB,EAjDF,SAAC,GAAsB,IAArBC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,SAEXC,EAAuCF,EAAvCE,IAAKP,EAAkCK,EAAlCL,KAAMQ,EAA4BH,EAA5BG,YAAaZ,EAAeS,EAAfT,OAAQa,EAAOJ,EAAPI,GAExC,EAA4BC,oBAAS,GAArC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAAkCF,mBAASd,GAA3C,mBAAOiB,EAAP,KAAkBC,EAAlB,KAMMf,EAAc,WAClBa,GAAU,IAiBZ,OACE,0BAAS/B,UAAU,OAAnB,UAEG8B,EACC,cAAC,EAAD,CACEf,OAAQiB,EACRhB,eAhBe,WACrBE,IAEIc,IAAcjB,GAIlBU,EAAS,CAACG,KAAII,YAAWjB,YAUnBE,YArBY,SAACiB,GACnBD,EAAaC,EAAIC,OAAOf,QAqBlBF,YAAaA,IAGf,cAAC,EAAD,CAAab,kBAjCO,WACxB0B,GAAU,MAkCR,qBAAKxB,OAAO,QAAQD,MAAM,OAAO8B,IAAKV,EAAKW,IAAI,iBAC/C,6BAAKlB,IACL,4BAAIQ,Q,iBChDGW,EAAe,CAC1B,CACEV,GAAI,OACJW,WAAY,6CACZC,MAAO,IAET,CACEZ,GAAI,aACJW,WAAY,0DACZC,MAAO,IAET,CACEZ,GAAI,OACJW,WAAY,6CACZC,MAAO,KAIEC,EAAc,CACzBb,GAAI,KACJT,KAAM,GACNQ,YAAa,GACbD,IAAK,GACLX,OAAQ,I,WCpBG2B,EAAY,UAmBZC,EAAY,SAAZA,EAAaC,GACxB,IAXmBC,EAAKC,EAWlBlB,GAXaiB,EAZN,EAYWC,EAXX,IAYNC,KAAKC,MAAMD,KAAKE,UAAYH,EAAMD,GAAOA,IAYhD,IAAKD,EAAIM,SAAStB,GAChB,OAAOA,EAGTe,EAAUC,I,iBCXGO,EAfC,WAEd,OACE,qBAAKnD,UAAU,SAAf,SACE,cAAC,IAAD,CACEC,KAAK,OACLmD,MAAM,OACN7C,OAAQ,GACRD,MAAO,QCuEA+C,EA1EC,SAAC,GAAmD,IAAlDC,EAAiD,EAAjDA,SAAUC,EAAuC,EAAvCA,QAASC,EAA8B,EAA9BA,gBAAiBC,EAAa,EAAbA,QAEpD,EAA8B5B,mBAASY,GAAvC,mBAAOiB,EAAP,KAAgBC,EAAhB,KAEMC,EAAW,WACf,IAAMhC,EAAKe,EAA0Bc,EFI1BI,QAAO,SAACC,EAAKC,GACxB,MAAM,GAAN,mBAAWD,GAAX,CAAgBC,EAAIvB,MAAMwB,KAAI,SAAAxC,GAAI,OAAIA,EAAKI,UAC1C,IAAIqC,QEJL,IACEC,IAAMC,IFZO,+CEYGvC,GACbwC,MAAK,SAACC,GACLV,EAAW,2BACND,GADK,IAER9B,GAAIyC,EAAIC,KAAK1C,GACbF,IAAK2C,EAAIC,KAAK5C,IACdX,OAAQuC,QAGd,MAAOiB,GACP,MAAM,IAAIC,MAAMD,KAIdE,EAAU,SAACvC,GACXA,EAAIC,OAAOuC,UAAUC,SAAS,aAChCzC,EAAIC,OAAOyC,QAEbjB,EAAWlB,GACXe,GAAgB,IASlBqB,qBAAU,WACRjB,MACC,IAEH,IFhB6BkB,EEgBvBC,EC9CO,SAAqBC,EAAMC,GAAyB,IAAlBC,EAAiB,wDAC1DC,EAAaC,mBAEnB,SAASC,IACHF,EAAWG,UACbC,aAAaJ,EAAWG,SACxBH,EAAWG,QAAU,MAMzB,OAFAT,qBAAU,kBAAOK,EAAUG,EAAa,OAAO,CAACH,IAEzC,WAAc,IAAD,uBAATM,EAAS,yBAATA,EAAS,gBAClBH,IACAF,EAAWG,QAAUG,YAAW,kBAAMT,EAAI,WAAJ,EAAQQ,KAAOP,IDgC7BS,CAAY9B,EF3CV,KE6CtB+B,EAAMP,iBAAO,MAGnB,OFrB6BN,EEmBda,EAAIL,UFNjBR,EAAMc,iBAAiB,SAXH,SAAhBC,IACCf,EAAM1D,MAAM0E,OAAOC,OAGtBjB,EAAMkB,kBAAkB,IAFxBlB,EAAMkB,kBAAkB,qNAI1BlB,EAAMmB,iBACNnB,EAAMoB,oBAAoB,QAASL,MEanC,uBAAM7F,UAAU,WAAWmG,SAhBZ,SAACjE,GAChBA,EAAIkE,iBACJ7C,EAAQ,CAACD,WAAUI,YACnBe,EAAQvC,IAauCmE,aAAa,MAA5D,UACE,cAAC,EAAD,CAAUxG,QAASkF,EAAmBjF,KAAK,uJAE1C4D,EAAQhC,IAAM,qBAAKU,IAAKsB,EAAQhC,IAAKW,IAAI,gBAAkB,cAAC,EAAD,IAE5D,uBACEsD,IAAKA,EACLvE,MAAOsC,EAAQvC,KACfE,SAAU,SAAAa,GAAG,OAAIyB,EAAW,2BAAID,GAAL,IAAcvC,KAAMe,EAAIC,OAAOf,UAC1DkF,UAAU,IACVrG,KAAK,OACLsG,YAAY,8FACZC,UAAQ,IAEV,0BACEpF,MAAOsC,EAAQ/B,YACfN,SAAU,SAAAa,GAAG,OAAIyB,EAAW,2BAAID,GAAL,IAAc/B,YAAaO,EAAIC,OAAOf,UACjEnB,KAAK,OACLsG,YAAY,gGAEd,sBAAKvG,UAAU,mBAAf,UACE,cAAC,EAAD,CAAUC,KAAK,SAASH,KAAK,iBAC7B,cAAC,EAAD,CAAUD,QAAS4E,EAAS3E,KAAK,gDE5E5B2G,EACF,WADEA,EAED,YCAClD,EAAU,SAACe,GACtB,OAAO,SAACoC,GACNA,EAAS,CACPzG,KAAMwG,EACNE,QAASrC,MAKF7C,EAAW,SAAC6C,GACvB,OAAO,SAACoC,GACNA,EAAS,CACPzG,KAAMwG,EACNE,QAASrC,MCqBAsC,EA5BA,SAAC,GAAuB,IAAtB7F,EAAqB,EAArBA,OAAQ0C,EAAa,EAAbA,QACjBiD,EAAWG,cACjB,EAA8BC,6BAAmBC,EAAgBL,GAAzDjF,EAAR,EAAQA,SAAU8B,EAAlB,EAAkBA,QAElB,EAAwC1B,oBAAS,GAAjD,mBAAOmF,EAAP,KAAqBxD,EAArB,KACQjB,EAA0BxB,EAA1BwB,WAAYC,EAAczB,EAAdyB,MAAOZ,EAAOb,EAAPa,GAM3B,OACE,0BAAS5B,UAAU,SAAnB,UACE,oBAAIA,UAAU,cAAd,SAA6BuC,IAC7B,sBAAKvC,UAAU,gBAAf,UACGwC,EAAMwB,KAAI,SAAAxC,GACT,OAAO,cAAC,EAAD,CAAMC,SAAUA,EAAwBD,KAAMA,GAAfA,EAAKI,OAE5CoF,EACC,cAAC,EAAD,CAASzD,QAASA,EAASD,SAAU1B,EAAI6B,QAASA,EAASD,gBAAiBA,IAE5E,cAAC,EAAD,CAAU3D,QAdU,WAC1B2D,GAAgB,IAa8B1D,KAAK,+GCfxCmH,EAXF,SAAC,GAAe,IAAdxD,EAAa,EAAbA,QAEb,OACE,sBAAMzD,UAAU,UAAhB,SACGyD,EAAQO,KAAI,SAAAjD,GACX,OAAO,cAAC,EAAD,CAAQA,OAAQA,EAAQ0C,QAASA,GAAc1C,EAAOa,UCatDsF,EAlBA,SAAC,GAA0B,IAAzBpH,EAAwB,EAAxBA,KAAMqH,EAAkB,EAAlBA,IAAKtH,EAAa,EAAbA,QAQ1B,OACE,yBAASA,QAPS,SAACqC,GACU,mBAAzBA,EAAIC,OAAOnC,WACbH,KAK6BG,UAAU,iBAAzC,SACE,sBAAKA,UAAU,SAAf,UACE,6BAAKF,IACL,cAAC,EAAD,CAAUD,QAASA,EAASC,KAAMqH,UCD3BC,EAXW,SAAC,GAAwB,IAAvBC,EAAsB,EAAtBA,iBAE1B,OACE,cAAC,EAAD,CACEvH,KAAK,gHACLqH,IAAI,eACJtH,QAAS,kBAAMwH,GAAiB,OCYvBC,MAdf,WAEE,IAAM7D,EAAU8D,aAAY,SAACC,GAAD,OAAWA,KACvC,ECRa,SAAsBrG,EAAMqG,GACzC,MAA0C3F,oBAAS,GAAnD,mBAAO4F,EAAP,KAAsBJ,EAAtB,KAOA,MAAO,CAACI,EAAeJ,EALH,WAClBK,aAAaC,QAAQxG,EAAMyG,KAAKC,UAAUL,IAC1CH,GAAiB,KDGoCS,CAAapF,EAAWe,GAA/E,mBAAOgE,EAAP,KAAsBJ,EAAtB,KAAwClH,EAAxC,KAEA,OACE,sBAAKH,UAAU,MAAf,UACE,cAAC,EAAD,CAAQG,YAAaA,IACrB,cAAC,EAAD,CAAMsD,QAASA,IACdgE,GAAiB,cAAC,EAAD,CAAmBJ,iBAAkBA,Q,gBEJvDU,EZLkC,SAACzF,GACvC,OAAQoF,aAAaM,QAAQtF,GAC3BkF,KAAKK,MAAMP,aAAaM,QAAQtF,IAAcJ,EYG7B4F,CAAyB5F,GAExC6F,EAAQC,uBCXS,WAAoC,IAAnCZ,EAAkC,uDAA1BlF,EAAc+F,EAAY,uCACxD,OAAQA,EAAOpI,MAEb,KAAKwG,EACH,MAA4B4B,EAAO1B,QAA5BrD,EAAP,EAAOA,SAAUI,EAAjB,EAAiBA,QAEjB,OAAO8D,EAAMxD,KAAI,SAAAD,GAIf,OAHIA,EAAInC,KAAO0B,IACfS,EAAIvB,MAAJ,CAAakB,GAAb,mBAAyBK,EAAIvB,SAEtBuB,KAGX,KAAK0C,EACH,IAEIjF,EAFJ,EAAgC6G,EAAO1B,QAAhC/E,EAAP,EAAOA,GAAII,EAAX,EAAWA,UAAWjB,EAAtB,EAAsBA,OAUtB,OAPAyG,EAAMc,SAAQ,SAAAvE,GACRA,EAAInC,KAAOb,IACbS,EAAOuC,EAAIvB,MAAM+F,MAAK,SAAA/G,GAAI,OAAIA,EAAKI,KAAOA,KAC1CJ,EAAI,2BAAQA,GAAR,IAAcT,OAAQiB,QAIvBwF,EAAMxD,KAAI,SAAAD,GAOf,OANIA,EAAInC,KAAOb,IACbgD,EAAIvB,MAAQuB,EAAIvB,MAAMgG,QAAO,SAAAhH,GAAI,OAAIA,EAAKI,KAAOA,MAE/CmC,EAAInC,KAAOI,IACb+B,EAAIvB,MAAJ,CAAahB,GAAb,mBAAsBuC,EAAIvB,SAErBuB,KAGX,QACE,OAAOyD,KDxBsBO,EAAcU,8BAAoBC,0BAAgBC,OAErFC,IAASC,OACP,cAAC,IAAD,CAAUV,MAAOA,EAAjB,SACE,cAAC,EAAD,MAEFW,SAASC,eAAe,W","file":"static/js/main.ff014691.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst MyButton = ({ onClick, text, ...other }) => {\r\n  return (\r\n    <button className='button' type='button' onClick={onClick} {...other} >{text}</button>\r\n  );\r\n};\r\n\r\nexport default MyButton;","import React from 'react';\r\nimport MyButton from './UI/MyButton';\r\n\r\nconst Header = ({saveChanges}) => {\r\n\r\n  return (\r\n    <header className='header'>\r\n      <h1>Task Tracker</h1>\r\n      <MyButton onClick={saveChanges} text='Сохранить изменения'/>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nconst ArrowButton = ({onClickOpenSelect}) => {\r\n  return (\r\n    <span onClick={onClickOpenSelect}>\r\n      <svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M10 0.292908L13.3536 3.64646L12.6465 4.35357L10.5 2.20712V9.50001H17.7929L15.6465 7.35357L16.3536 6.64646L19.7071 10L16.3536 13.3536L15.6465 12.6465L17.7929 10.5H10.5V17.7929L12.6465 15.6465L13.3536 16.3536L10 19.7071L6.64646 16.3536L7.35357 15.6465L9.50001 17.7929V10.5H2.20712L4.35357 12.6465L3.64646 13.3536L0.292908 10L3.64646 6.64646L4.35357 7.35357L2.20712 9.50001H9.50001V2.20712L7.35357 4.35357L6.64646 3.64646L10 0.292908Z\" fill=\"black\"/>\r\n      </svg>\r\n    </span>\r\n  );\r\n};\r\n\r\nexport default ArrowButton;","import React from 'react';\r\nimport MyButton from './MyButton';\r\n\r\nconst SelectColumnForm = ({ column, onChooseColumn, onSetColumn, closeSelect }) => {\r\n\r\n  return (\r\n    <form className='card_mover'>\r\n      <select name='type' value={column} onChange={onSetColumn}>\r\n        <option value='' disabled>Куда переместить?</option>\r\n        <option value=\"todo\">Сделать</option>\r\n        <option value=\"inprogress\">В процессе</option>\r\n        <option value=\"done\">Сделано</option>\r\n      </select>\r\n      <MyButton onClick={onChooseColumn} text=\"Ok\" />\r\n      <MyButton onClick={closeSelect} text=\"Отмена\" />\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default SelectColumnForm;","import React, { useState } from 'react';\r\nimport ArrowButton from './UI/ArrowButton';\r\nimport SelectColumnForm from './UI/SelectColumnForm';\r\n\r\nconst Card = ({card, moveCard}) => {\r\n\r\n  const { url, name, description, column, id } = card;\r\n\r\n  const [select, setSelect] = useState(false);\r\n  const [newColumn, setNewColumn] = useState(column);\r\n\r\n  const onClickOpenSelect = () => {\r\n    setSelect(true);\r\n  }\r\n\r\n  const closeSelect = () => {\r\n    setSelect(false);\r\n  }\r\n\r\n  const onSetColumn = (evt) => {\r\n    setNewColumn(evt.target.value);\r\n  }\r\n\r\n  const onChooseColumn = () => {\r\n    closeSelect();\r\n\r\n    if (newColumn === column) {\r\n      return;\r\n    }\r\n\r\n    moveCard({id, newColumn, column})\r\n  }\r\n  \r\n  return (\r\n    <article className='card'>\r\n\r\n      {select ? \r\n        <SelectColumnForm \r\n          column={newColumn} \r\n          onChooseColumn={onChooseColumn}\r\n          onSetColumn={onSetColumn}\r\n          closeSelect={closeSelect} \r\n        /> \r\n        : \r\n        <ArrowButton onClickOpenSelect={onClickOpenSelect}/>}\r\n\r\n      <img height=\"100px\" width=\"auto\" src={url} alt=\"card's cover\" />\r\n      <h5>{name}</h5>\r\n      <p>{description}</p>\r\n    </article>\r\n  );\r\n};\r\n\r\nexport default Card;","export const defaultState = [\r\n  {\r\n    id: 'todo',\r\n    columnName: 'Сделать',\r\n    cards: []\r\n  },\r\n  {\r\n    id: 'inprogress',\r\n    columnName: 'В процессе',\r\n    cards: []\r\n  },\r\n  {\r\n    id: 'done',\r\n    columnName: 'Сделано',\r\n    cards: []\r\n  }\r\n];\r\n\r\nexport const defaultCard = {\r\n  id: null,\r\n  name: '',\r\n  description: '',\r\n  url: '',\r\n  column: ''\r\n}","const MIN_ID = 1;\r\nconst MAX_ID = 5000;\r\n\r\nexport const stateName = 'tracker';\r\nexport const URL = 'https://jsonplaceholder.typicode.com/photos/';\r\nexport const DEBOUNCE_DELAY = 200;\r\n\r\nexport const getStateFromLocalStorage = (defaultState) => {\r\n  return (localStorage.getItem(stateName)) ?\r\n    JSON.parse(localStorage.getItem(stateName)) : defaultState;\r\n}\r\n\r\nconst getRandomId = (min, max) => {\r\n  return Math.floor(Math.random() * (max - min) + min);\r\n}\r\n\r\nexport const getIdsFromState = (state) => {\r\n  return state.reduce((arr, col) => {\r\n    return [...arr, col.cards.map(card => card.id)];  \r\n  }, []).flat();\r\n}\r\n\r\nexport const getUniqId = (ids) => { \r\n  const id = getRandomId(MIN_ID, MAX_ID);\r\n\r\n  if (!ids.includes(id)) {\r\n    return id;\r\n  };\r\n\r\n  getUniqId(ids);\r\n}\r\n\r\nexport const checkOnlySpace = (input) => {\r\n\r\n  const onInputChange = () => {\r\n    if (!input.value.trim().length) {\r\n      input.setCustomValidity('Поле не должно содержать только пробелы');\r\n    } else {\r\n      input.setCustomValidity('');\r\n    }\r\n    input.reportValidity();\r\n    input.removeEventListener('input', onInputChange)\r\n  }\r\n\r\n  if (input) {\r\n    input.addEventListener('input', onInputChange)\r\n  }\r\n}","import React from 'react';\r\nimport Loader from 'react-loader-spinner';\r\n\r\nconst Spinner = () => {\r\n\r\n  return (\r\n    <div className=\"loader\">\r\n      <Loader\r\n        type=\"Oval\"\r\n        color=\"#000\"\r\n        height={30}\r\n        width={30}\r\n      />\r\n    </div>\r\n    \r\n  );\r\n};\r\n\r\nexport default Spinner;","import axios from 'axios';\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport { defaultCard } from '../data';\r\nimport useDebounce from '../hooks/useDebounce';\r\nimport { checkOnlySpace, DEBOUNCE_DELAY, getIdsFromState, getUniqId, URL } from '../utils';\r\nimport MyButton from './UI/MyButton';\r\nimport Spinner from './UI/Spinner';\r\n\r\nconst NewCard = ({columnId, addCard, setShowCardForm, tracker}) => {\r\n\r\n  const [newCard, setNewCard] = useState(defaultCard);  \r\n\r\n  const getPhoto = () => {\r\n    const id = getUniqId(getIdsFromState(tracker));\r\n\r\n    try {\r\n      axios.get(URL + id)\r\n        .then((res) => {\r\n          setNewCard({\r\n            ...newCard, \r\n            id: res.data.id, \r\n            url: res.data.url, \r\n            column: columnId\r\n          })\r\n        });\r\n    } catch (err) {\r\n      throw new Error(err);\r\n    }\r\n  }\r\n\r\n  const onReset = (evt) => {\r\n    if (evt.target.classList.contains('new-card')) {\r\n      evt.target.reset(); \r\n    }\r\n    setNewCard(defaultCard);\r\n    setShowCardForm(false);\r\n  }\r\n\r\n  const onSubmit = (evt) => {\r\n    evt.preventDefault();\r\n    addCard({columnId, newCard});\r\n    onReset(evt);\r\n  }\r\n\r\n  useEffect(() => {\r\n    getPhoto();\r\n  }, [])  \r\n\r\n  const getPhotoDebounsed = useDebounce(getPhoto, DEBOUNCE_DELAY);\r\n\r\n  const ref = useRef(null);\r\n  checkOnlySpace(ref.current);\r\n\r\n  return (\r\n    <form className='new-card' onSubmit={onSubmit} autoComplete=\"off\" >\r\n      <MyButton onClick={getPhotoDebounsed} text='Выбрать другое изображение'/>\r\n\r\n      {newCard.url ? <img src={newCard.url} alt=\"cards cover\"/> : <Spinner />}\r\n\r\n      <input \r\n        ref={ref}\r\n        value={newCard.name}\r\n        onChange={evt => setNewCard({...newCard, name: evt.target.value})}\r\n        minLength='1'\r\n        type=\"text\"\r\n        placeholder='Введите название' \r\n        required\r\n      />\r\n      <textarea \r\n        value={newCard.description}\r\n        onChange={evt => setNewCard({...newCard, description: evt.target.value})}\r\n        type=\"text\"\r\n        placeholder='Введите описание'\r\n      />\r\n      <div className='new-card_buttons'>\r\n        <MyButton type='submit' text='Ок'/>  \r\n        <MyButton onClick={onReset} text='Отмена'/>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default NewCard;","import { useEffect, useRef } from 'react';\r\n\r\nexport default function useDebounce(func, delay, cleanUp = false) {\r\n  const timeoutRef = useRef();\r\n\r\n  function clearTimer() {\r\n    if (timeoutRef.current) {\r\n      clearTimeout(timeoutRef.current);\r\n      timeoutRef.current = null;\r\n    }\r\n  }\r\n\r\n  useEffect(() => (cleanUp ? clearTimer : null), [cleanUp]);\r\n\r\n  return (...args) => {\r\n    clearTimer();\r\n    timeoutRef.current = setTimeout(() => func(...args), delay);\r\n  };\r\n}","export const types = {\r\n  addCard: 'ADD_CARD',\r\n  moveCard: 'MOVE_CARD'\r\n}","import { types } from \"../types\"\r\n\r\nexport const addCard = (data) => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: types.addCard,\r\n      payload: data\r\n    })\r\n  }\r\n}\r\n\r\nexport const moveCard = (data) => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: types.moveCard,\r\n      payload: data\r\n    })\r\n  }\r\n}","import React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport Card from './Card';\r\nimport NewCard from './NewCard';\r\nimport MyButton from './UI/MyButton';\r\nimport * as actionCreators from '../action-creators';\r\n\r\nconst Column = ({column, tracker}) => {\r\n  const dispatch = useDispatch();\r\n  const { moveCard, addCard } = bindActionCreators(actionCreators, dispatch); \r\n\r\n  const [showCardForm, setShowCardForm] = useState(false);\r\n  const { columnName, cards, id } = column;\r\n\r\n  const onShowCardFormClick = () => {\r\n    setShowCardForm(true);\r\n  }\r\n\r\n  return (\r\n    <section className='column'>\r\n      <h3 className='column_name'>{columnName}</h3>\r\n      <div className='cards_wrapper'>\r\n        {cards.map(card => {\r\n          return <Card moveCard={moveCard} key={card.id} card={card} />\r\n        })}\r\n        {showCardForm ? \r\n          <NewCard addCard={addCard} columnId={id} tracker={tracker} setShowCardForm={setShowCardForm} />\r\n          :\r\n          <MyButton onClick={onShowCardFormClick} text='+ добавить карточку'/>\r\n        }\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Column;","import React from 'react';\r\nimport Column from './Column';\r\n\r\nconst Main = ({tracker}) => {\r\n\r\n  return (\r\n    <main className='wrapper'>\r\n      {tracker.map(column => {\r\n        return <Column column={column} tracker={tracker} key={column.id}/>\r\n      })}\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Main;","import React from 'react';\r\nimport MyButton from './MyButton';\r\n\r\nconst Module = ({text, btn, onClick}) => {\r\n\r\n  const onClickArea = (evt) => {\r\n    if (evt.target.className === 'module-wrapper') {\r\n      onClick();\r\n    }\r\n  }  \r\n\r\n  return (\r\n    <section onClick={onClickArea} className='module-wrapper'>\r\n      <div className=\"module\">\r\n        <h5>{text}</h5>\r\n        <MyButton onClick={onClick} text={btn} />\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Module;","import React from 'react';\r\nimport Module from './UI/Module';\r\n\r\nconst SaveChangesModule = ({setIsSaveChanges}) => {\r\n\r\n  return (\r\n    <Module \r\n      text='Изменения сохранены' \r\n      btn='Ок' \r\n      onClick={() => setIsSaveChanges(false)}\r\n    />\r\n  );\r\n};\r\n\r\nexport default SaveChangesModule;","import { useSelector } from \"react-redux\";\nimport Header from \"./components/Header\";\nimport Main from \"./components/Main\";\nimport SaveChangesModule from \"./components/SaveChangesModule\";\nimport useSaveState from \"./hooks/useSaveState\";\nimport { stateName } from \"./utils\";\n\nfunction App() {\n\n  const tracker = useSelector((state) => state);\n  const [isSaveChanges, setIsSaveChanges, saveChanges] = useSaveState(stateName, tracker);\n\n  return (\n    <div className=\"App\">\n      <Header saveChanges={saveChanges}/>\n      <Main tracker={tracker}/>\n      {isSaveChanges && <SaveChangesModule setIsSaveChanges={setIsSaveChanges} />}\n    </div>\n  );\n}\n\nexport default App;\n","import { useState } from \"react\";\r\n\r\nexport default function useSaveState(name, state) {\r\n  const [isSaveChanges, setIsSaveChanges] = useState(false);\r\n\r\n  const saveChanges = () => {\r\n    localStorage.setItem(name, JSON.stringify(state));\r\n    setIsSaveChanges(true);\r\n  };\r\n\r\n  return [isSaveChanges, setIsSaveChanges, saveChanges];\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport { applyMiddleware, createStore } from 'redux';\nimport { reducer } from './reducer';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { getStateFromLocalStorage } from './utils';\nimport { defaultState } from './data';\n\nconst initialState = getStateFromLocalStorage(defaultState)\n\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(thunk)));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n","import { types } from \"../types\"\r\nimport { defaultState } from \"../data\";\r\n\r\nexport const reducer = (state = defaultState, action ) => {\r\n  switch (action.type) {\r\n\r\n    case types.addCard:\r\n      const {columnId, newCard} = action.payload;\r\n\r\n      return state.map(col => {\r\n        if (col.id === columnId) {\r\n        col.cards = [newCard, ...col.cards ];\r\n        }\r\n        return col;\r\n      });\r\n\r\n    case types.moveCard:\r\n      const {id, newColumn, column} = action.payload;\r\n\r\n      let card;\r\n      state.forEach(col => {\r\n        if (col.id === column) {\r\n          card = col.cards.find(card => card.id === id);\r\n          card = { ...card, column: newColumn };\r\n        }\r\n      })\r\n      \r\n      return state.map(col => {\r\n        if (col.id === column) {\r\n          col.cards = col.cards.filter(card => card.id !== id);\r\n        }\r\n        if (col.id === newColumn) {\r\n          col.cards = [card, ...col.cards]\r\n        }\r\n        return col;\r\n      });\r\n      \r\n    default:\r\n      return state;\r\n  }\r\n}"],"sourceRoot":""}